/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.larrunet.gui;

import com.larrunet.bean.Antena;
import com.larrunet.dao.AntenaDAO;
import com.larrunet.util.IFrameListener;
import com.larrunet.util.TableMouseListener;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author larru
 */
public class IFrm_Antenas extends javax.swing.JInternalFrame {

    /**
     * Creates new form IFrm_Antenas
     */
    private AntenaDAO daoAntenas;
    private JPopupMenu popupMenu;
    private JMenuItem menuItemEdit, menuItemDelete;
    private List<Antena> listaAntenas;
    private boolean editar = false;
    Antena antena;

    public IFrm_Antenas() {
        initComponents();
        this.addInternalFrameListener(new IFrameListener());
        daoAntenas = new AntenaDAO();
        btnCancelar.setVisible(false);
        makePopUp();
        listarAntenas();

    }

    private void makePopUp() {
        popupMenu = new JPopupMenu();
        menuItemEdit = new JMenuItem("Editar");
        menuItemDelete = new JMenuItem("Eliminar");

        ActionTable at = new ActionTable();

        menuItemEdit.addActionListener(at);
        menuItemDelete.addActionListener(at);

        tblAntenas.setComponentPopupMenu(popupMenu);
        tblAntenas.addMouseListener(new TableMouseListener(tblAntenas));

        popupMenu.add(menuItemEdit);
        popupMenu.add(menuItemDelete);

    }

    void listarAntenas() {
        DefaultTableModel model = (DefaultTableModel) tblAntenas.getModel();
        model.setRowCount(0);

        listaAntenas = daoAntenas.listarAntenas();

        for (Antena antena : listaAntenas) {
            Object[] row = {antena.getCodAntena(), antena.getDescripAntena(), antena.getEstadoAntena()};
            model.addRow(row);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdAntena = new javax.swing.JTextField();
        txtDescripcion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAntenas = new javax.swing.JTable();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Mantenimiento de Antenas emisoras");

        jLabel1.setText("Id:");

        txtIdAntena.setEditable(false);

        jLabel2.setText("Descripcion:");

        jLabel3.setText("Estado:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2))
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDescripcion)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtIdAntena, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtEstado))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdAntena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        tblAntenas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Descripcion", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblAntenas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblAntenas);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(btnRegistrar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnCancelar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        registrarAntena();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limpiar();

        btnRegistrar.setText("Registrar");
        editar = false;
        btnCancelar.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    void limpiar(){
        antena = null;
        txtIdAntena.setText("");
        txtDescripcion.setText("");
        txtEstado.setText("");
    }
    
    
    
    void registrarAntena() {
        if (editar) {
            antena.setDescripAntena(txtDescripcion.getText());
            antena.setEstadoAntena(txtEstado.getText());

            if (daoAntenas.modificarAntena(antena)) {
                listarAntenas();
                JOptionPane.showMessageDialog(this, "¡Actualizado!", "Actualizacion", JOptionPane.INFORMATION_MESSAGE);
                limpiar();

                btnRegistrar.setText("Registrar");
                editar = false;
                btnCancelar.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(this, "¡No se pudo guardar los cambios!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

        } else {
            
            antena = new Antena();
            antena.setDescripAntena(txtDescripcion.getText());
            antena.setEstadoAntena(txtEstado.getText());
            if (daoAntenas.registrarAntena(antena)) {
                JOptionPane.showMessageDialog(this, "¡Antena registrada exitosamente!", "Registro", JOptionPane.INFORMATION_MESSAGE);
                listarAntenas();
                limpiar();
            } else {
                JOptionPane.showMessageDialog(this, "¡Hubo un error al registrar!", "Falla de registro", JOptionPane.ERROR_MESSAGE);
            }
        }

    }

    void editar() {
        int selectedRow = tblAntenas.getSelectedRow();
        antena = listaAntenas.get(selectedRow);

        txtIdAntena.setText(antena.getCodAntena());
        txtDescripcion.setText(antena.getDescripAntena());
        txtEstado.setText(antena.getEstadoAntena());

        editar = true;
        btnCancelar.setVisible(true);
        btnRegistrar.setText("Guardar cambios");
    }

    void eliminar() {
        int selectedRow = tblAntenas.getSelectedRow();
        Antena antena = listaAntenas.get(selectedRow);

        String msg = "¿Está seguro de eliminar la antena " + antena.getDescripAntena()+ " ?";

        int respuesta = JOptionPane.showConfirmDialog(this, msg, "CONFIRMAR ELIMINACION", JOptionPane.YES_NO_OPTION);
        
        if(respuesta == JOptionPane.YES_OPTION){
           /* 
            if(daoAntenas.eliminarAntena(antena.getCodAntena())){
                JOptionPane.showMessageDialog(this, "¡Antena eliminada exitosamente!", "Eliminacion", JOptionPane.INFORMATION_MESSAGE);
                listarAntenas();
            }else{
                JOptionPane.showMessageDialog(this, "¡Hubo un error al eliminar!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
         */   
        }
        
        
    }

    private class ActionTable implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            JMenuItem menu = (JMenuItem) e.getSource();

            if (menu == menuItemEdit) {
                editar();
            } else if (menu == menuItemDelete) {
                eliminar();
            }

        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAntenas;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtEstado;
    private javax.swing.JTextField txtIdAntena;
    // End of variables declaration//GEN-END:variables
}
